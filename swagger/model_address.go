/*
 * Square
 *
 * Use Square APIs to manage and run business including payment, customer, product, inventory, and employee management.
 *
 * API version: 2.0
 * Contact: developers@squareup.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

// Represents a postal address in a country. The address format is based on an [open-source library from Google](https://github.com/google/libaddressinput). For more information, see [AddressValidationMetadata](https://github.com/google/libaddressinput/wiki/AddressValidationMetadata). This format has dedicated fields for four address components: postal code, locality (city), administrative district (state, prefecture, or province), and sublocality (town or village). These components have dedicated fields in the `Address` object because software sometimes behaves differently based on them. For example, sales tax software may charge different amounts of sales tax based on the postal code, and some software is only available in certain states due to compliance reasons.  For the remaining address components, the `Address` type provides the `address_line_1` and `address_line_2` fields for free-form data entry. These fields are free-form because the remaining address components have too many variations around the world and typical software does not parse these components. These fields enable users to enter anything they want.  Note that, in the current implementation, all other `Address` type fields are blank. These include `address_line_3`, `sublocality_2`, `sublocality_3`, `administrative_district_level_2`, `administrative_district_level_3`, `first_name`, `last_name`, and `organization`.  When it comes to localization, the seller's language preferences (see [Language preferences](https://developer.squareup.com/docs/locations-api#location-specific-and-seller-level-language-preferences)) are ignored for addresses. Even though Square products (such as Square Point of Sale and the Seller Dashboard) mostly use a seller's language preference in communication, when it comes to addresses, they will use English for a US address, Japanese for an address in Japan, and so on.
type Address struct {
	// The first line of the address.  Fields that start with `address_line` provide the address's most specific details, like street number, street name, and building name. They do *not* provide less specific details like city, state/province, or country (these details are provided in other fields).
	AddressLine1 string `json:"address_line_1,omitempty"`
	// The second line of the address, if any.
	AddressLine2 string `json:"address_line_2,omitempty"`
	// The third line of the address, if any.
	AddressLine3 string `json:"address_line_3,omitempty"`
	// The city or town of the address.
	Locality string `json:"locality,omitempty"`
	// A civil region within the address's `locality`, if any.
	Sublocality string `json:"sublocality,omitempty"`
	// A civil region within the address's `sublocality`, if any.
	Sublocality2 string `json:"sublocality_2,omitempty"`
	// A civil region within the address's `sublocality_2`, if any.
	Sublocality3 string `json:"sublocality_3,omitempty"`
	// A civil entity within the address's country. In the US, this is the state.
	AdministrativeDistrictLevel1 string `json:"administrative_district_level_1,omitempty"`
	// A civil entity within the address's `administrative_district_level_1`. In the US, this is the county.
	AdministrativeDistrictLevel2 string `json:"administrative_district_level_2,omitempty"`
	// A civil entity within the address's `administrative_district_level_2`, if any.
	AdministrativeDistrictLevel3 string `json:"administrative_district_level_3,omitempty"`
	// The address's postal code.
	PostalCode string   `json:"postal_code,omitempty"`
	Country    *Country `json:"country,omitempty"`
	// Optional first name when it's representing recipient.
	FirstName string `json:"first_name,omitempty"`
	// Optional last name when it's representing recipient.
	LastName string `json:"last_name,omitempty"`
	// Optional organization name when it's representing recipient.
	Organization string `json:"organization,omitempty"`
}
